import * as types from "@/graphql/resolvers";
import { fieldAuthorizePlugin, makeSchema } from "nexus";
import { resolve } from "path";

function resolvePath(path: string) {
  return resolve(process.cwd(), path);
}

export const schema = makeSchema({
  types,
  plugins: [fieldAuthorizePlugin()],
  prettierConfig: resolvePath(".prettierrc"),
  outputs: {
    schema: resolvePath("src/autogenerated/schema.graphql"),
    typegen: resolvePath("src/autogenerated/nexus.ts"),
  },
  features: {
    abstractTypeStrategies: {
      isTypeOf: true,
    },
  },
  contextType: {
    module: resolvePath("src/graphql/context/index.ts"),
    export: "Context",
  },
  sourceTypes: {
    modules: [
      {
        module: resolvePath("node_modules/.prisma/client/index.d.ts"),
        alias: "prisma",
      },
    ],
  },
  shouldExitAfterGenerateArtifacts: process.argv.includes("--nexus-exit"),
});
